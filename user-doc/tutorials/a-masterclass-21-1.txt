/**
\page masterclass-21-1 PLUMED Masterclass 21.1: PLUMED syntax and analysis

\section masterclass-21-1-aims Aims

The aim of this Masterclass is to introduce users to the PLUMED syntax and to 
illustrate how PLUMED can be used to analyze pre-existing molecular dynamics trajectories.

\section masterclass-21-1-lo Learning Outcomes

Once this Masterclass is completed, users will be able to:

- Write a simple PLUMED input file and use it with the \ref driver utility to analyze a trajectory.
- Use \ref MOLINFO shortcuts to select atoms.
- Define and use virtual atoms, such as \ref CENTER.
- Deal with discontinuties in the trajectory due to periodic boundary conditions.
- Use \ref RMSD and similar metrics.
- Create their own collective variable with \ref COMBINE.
 
\section masterclass-21-1-install Setting up PLUMED

\subsection masterclass-21-1-conda Installation

In this Masterclass, we will use <a href="https://www.plumed.org">PLUMED</a> version 2.7.0.
You can easily install PLUMED on your Linux/Mac machine using <a href="https://docs.conda.io/en/latest/">conda</a> and the following command:

\verbatim
conda install -c conda-forge plumed
\endverbatim

\subsection masterclass-21-1-plumed Overview 
 
PLUMED is a library that can be incorporated into many molecular dynamics (MD) codes by adding a relatively simple and well documented interface.
Once it is incorporated you can use PLUMED to perform on-the-fly a variety of different analyses and to bias 
the sampling in MD simulations. Additionally, PLUMED can be used as a standalone code for analyzing trajectories.
If you want to use the code in this way, you can run the PLUMED executable by issuing the command:

\verbatim
plumed <instructions>
\endverbatim

Let's start by getting a feel for the range of calculations that PLUMED can do. Issue the following command now:

\verbatim
plumed --help 
\endverbatim

The output of this command is a list of tasks that PLUMED can perform. Among these, there are commands that allow you
to patch an MD code, postprocess metadynamics simulations, and build the manual. In this
class we will mostly use PLUMED to analyze trajectories. In order to do so, we will
learn how to use the \ref driver tool. 
Let's look at the options of PLUMED \ref driver by issuing the following command:  

\verbatim
plumed driver --help
\endverbatim

As you can see we can do a number of things with PLUMED \ref driver. For all of these options, however, we are going to need to write 
a PLUMED input file. 

\section masterclass-21-1-resources Resources

The data needed to execute the exercises of this Masterclass can be found on [GitHub](https://github.com/plumed/masterclass-21-1).
You can clone this repository locally on your machine using the following command:

\verbatim
git clone https://github.com/plumed/masterclass-21-1.git
\endverbatim

The data you need can be found in the folder called `data`:
- `5-HT1B.pdb`: reference conformation of the 5-HT1B receptor with the serotonin ligand.
- `5-HT1B.xtc`: trajectory of the 5-HT1B receptor with the serotonin ligand.

Please note that:
- this is a simulation of a membrane receptor, but water, lipids, and ions have been stripped out of the trajectory.
- this is the raw trajectory generated by [GROMACS](https://www.gromacs.org). Therefore it is discontinuous due to periodic boundaries conditions (PBCs).
- no PLUMED input file is provided in the GitHub repository. The students must prepare these input files by themselves following the templates provided below.

To keep things clean, it is recommended to run each exercise in a separate sub-directory that you can create inside the root directory `masterclass-21-1`, which has been created by the `git clone` command.

\note All the exercises have been tested with PLUMED version 2.7.0.

\section masterclass-21-1-structure Your first PLUMED input file

The main goal of PLUMED is to compute collective variables (or CVs), which are complex descriptors 
of the system that can be used to describe the conformational change of a protein or a chemical reaction.
This can be done either on-the-fly during a molecular dynamics simulations or _a posteriori_ on a 
pre-calculated trajectory using PLUMED as a post-processing tool. 
In both cases, you should create an input file with a specific PLUMED syntax. 
Have a look at the sample input file below:

\plumedfile
# Compute distance between atoms 1 and 10.
# Atoms are ordered as in the trajectory files and their numbering starts from 1.
# The distance is called "d" for future reference.
d: DISTANCE ATOMS=1,10

# Compute the torsional angle between atoms 1, 10, 20, and 30.
# The angle is called "phi1" for future reference.
phi1: TORSION ATOMS=1,10,20,30

# The same CV defined above can be split into multiple lines
# The angle is called "phi2" for future reference.
TORSION ...
LABEL=phi2
ATOMS=1,10,20,30
...

# Print "d" on a file named "COLVAR1" every 10 steps.
PRINT ARG=d FILE=COLVAR1 STRIDE=10

# Print "phi1" and "phi2" on another file named "COLVAR2" every 100 steps.
PRINT ARG=phi1,phi2 FILE=COLVAR2 STRIDE=100
\endplumedfile

In the input file above, each line defines a so-called action. In this simple example, 
actions are used to compute a distance, a dihedral angle, 
or print some values on a file. Each action supports a number of keywords,
whose value is specified. Action names are highlighted in green and, by clicking on them, you can go to the
corresponding page in the manual that contains a detailed description of each keyword.
Actions that support the keyword `STRIDE` are those that determine how frequently things are done.
Notice that the default value for `STRIDE` is always 1. In the example above, omitting `STRIDE` keywords
the corresponding `COLVAR` files would have been written for every frame of the analyzed trajectory.
All the other actions in the example above, i.e. \ref DISTANCE and \ref TORSION, do not 
support the `STRIDE` keyword and are only calculated when requested. That is, `d` will be computed
every 10 frames, and `phi1` and `phi2` every 100 frames.

Variables should be given a name (in the example above, `d`, `phi1`, and `phi2`), which is
then used to refer to these variables in subsequent actions, such as the \ref PRINT command.
A lists of atoms should be provided as comma separated numbers, with no space.

You can find more information on the PLUMED syntax
at \ref Syntax page of the manual. The complete documentation for all the supported
collective variables can be found at the \ref colvarintro page.

\subsection masterclass-21-1-units The PLUMED internal units

By default the PLUMED inputs and outputs quantities in the following units:

- Length: nanometers
- Energy: kJ/mol
- Time: picoseconds
- Mass: amu
- Charge: e

If you want to change these units, you can do this using the \ref UNITS keyword. 

\section masterclass-21-1-ex Exercises

\subsection masterclass-21-1-ex-1 Exercise 1: Computing and printing simple collective variables

In this exercise, we will learn how to compute and print collective variables on a pre-calculated MD trajectory.
To analyze the trajectories provided here, we will:
- create a PLUMED input file with a text editor (typically called `plumed.dat`);
- run the PLUMED \ref driver utility.

Notice that you can also visualize trajectories with `VMD` (always a good idea!).
For example, the trajectory `5-HT1B.xtc` can be visualized with the command:

\verbatim
vmd 5-HT1B.pdb 5-HT1B.xtc 
\endverbatim

When you try this, you will notice that this trajectory is discontinuous due to PBCs. We need to keep this
in mind in our analysis. 

Let's now prepare a PLUMED input file to calculate: 
- the gyration radius of the CA protein atoms (\ref GYRATION) of the first 40 N-terminal residues. Look at `5-HT1B.pdb`
  to retrieve the list of indexes of these CA atoms;
- the distance (\ref DISTANCE) between CA atoms of residues 1 and 40.

The first 40 residues of the 5-HT1B receptor correspond to an extracellular flexible loop of which we want to characterize the
dynamics during our MD simulation.
Below you can find a sample `plumed.dat` file that you can use as a template.
Whenever you see an highlighted \highlight{FILL} string, be careful because this is a string that you must replace.

\plumedfile
# Compute gyration radius on CA atoms of the first 40 N-terminal residues:
r: GYRATION ATOMS=__FILL__

# Compute distance between CA atoms of residues 1 and 40 
d: DISTANCE ATOMS=__FILL__

# Print the two collective variables on COLVAR file every step
PRINT ARG=__FILL__ FILE=COLVAR STRIDE=__FILL__
\endplumedfile

Once your `plumed.dat` file is complete, you can run the PLUMED \ref driver as follows:

\verbatim
> plumed driver --plumed plumed.dat --mf_xtc 5-HT1B.xtc
\endverbatim

Scroll in your terminal to read the PLUMED log. As you can see,
PLUMED gives a lot of feedback about the input that it is reading and the actions that it will
execute. Please take your time to inspect the log file and check if PLUMED is actually doing what you intend to do.

The command above will create a `COLVAR` file like this one:

\verbatim
#! FIELDS time r d
 0.000000 1.271069 2.782998
 1.000000 1.263125 2.388697
 2.000000 1.348965 2.606062
 3.000000 1.291011 2.204363
 4.000000 1.280714 2.411836
 5.000000 1.257692 2.334839
\endverbatim

Notice that the first line informs you about the content of each column.

__In case you obtain different numbers, check your input, you might have made some mistake!__

This file can then be visualized using `gnuplot` (for more info about this tool, look <a href="http://www.gnuplot.info">here</a>).

\verbatim
gnuplot> p "COLVAR" u 1:2 w lp, "" u 1:3 w lp 
\endverbatim

What can you deduce about the dynamics of this region of the 5-HT1B receptors? Are the two CVs both providing useful information or are they quite correlated? To answer to the latter question, try to visualize the value of one CV against the other:

\verbatim
gnuplot> p "COLVAR" u 2:3 w p
\endverbatim

Now, look at what happens if you run the exercise twice. The second time, PLUMED
will *back up* the previously produced file so as not to overwrite it.
You can also *concatenate* your files by using the action \ref RESTART at the beginning
of your input file.

\subsection masterclass-21-1-ex-2 Exercise 2:  MOLINFO shortcuts

PLUMED provides some shortcuts to select atoms with specific properties.
To use this feature, you should specify the \ref MOLINFO action along with a reference
PDB file. This command is used to provide information on the molecules that are present in your system.

Let's try to use this functionality to calculate the backbone dihedral angle \f$ \phi \f$ (phi) of residue 2
of the 5-HT1B receptor. This CV is defined by the action \ref TORSION and a set of 4 atoms. For residue `i`,
the dihedral \f$ \phi \f$ is defined by these atoms: C(i-1),N(i),CA(i),C(i) (see Fig. \ref master-ISDD-1-dih-fig).

\anchor master-ISDD-1-dih-fig
\image html master-ISDD-1-dih-fig.png "Definition of backbone dihedral angles."

After consulting the manual and inspecting `5-HT1B.pdb`, let's define the dihedral angle \f$ \phi \f$ of residue 2 
in two different ways:
1. specifying an explicit list of 4 atoms (`t1`).
2. using the \ref MOLINFO shortcut (`t2`);

\plumedfile
# Activate MOLINFO functionalities
MOLINFO STRUCTURE=__FILL__

# Define the dihedral phi of residue 2 as an explicit list of 4 atoms
t1: TORSION ATOMS=__FILL__
# Define the same dihedral using MOLINFO shortcuts
t2: TORSION ATOMS=__FILL__

# Print the two collective variables on COLVAR file every 10 steps
PRINT ARG=__FILL__ FILE=COLVAR STRIDE=__FILL__
\endplumedfile

After completing the PLUMED input file above, let's use it to analyze the trajectory `5-HT1B.xtc` using the \ref driver tool:

\verbatim
> plumed driver --plumed plumed.dat --mf_xtc 5-HT1B.xtc
\endverbatim

You can use `gnuplot` to visualize the trajectory of the two CVs calculated with the PLUMED input file above
and written in the `COLVAR` file.
If you executed this exercise correctly, these two trajectories should be identical.

As a second example of \ref MOLINFO capabilities, we will use advanced atom selection in combination with
the [MDAnalysis](https://www.mdanalysis.org) or [MDTraj](https://mdtraj.org/1.9.4/index.html) python libraries. First, have a look at the \ref MOLINFO page to make sure that one of these two libraries is installed. Then, let's redo \ref masterclass-21-1-ex-1, this time using \ref MOLINFO shortcuts to select CA atoms. You need to complete this template PLUMED input file, after choosing either MDAnalysis or MDTraj:

\plumedfile
# Activate MOLINFO functionalities and specify python binary
MOLINFO STRUCTURE=__FILL__ PYTHON_BIN=python

# If you want to use MDAnalysis, you can uncomment and complete these lines:
#r: GYRATION ATOMS={@mda:{resid __FILL__ and name __FILL__}}
#d: DISTANCE ATOMS={@mda:{resid __FILL__ and name __FILL__}}

# Alternatively, if you want to use MDTraj, you can uncomment and complete these lines:
#r: GYRATION ATOMS={@mdt:{resid __FILL__ and name __FILL__}}
#d: DISTANCE ATOMS={@mdt:{resid __FILL__ and name __FILL__}}

# Print the two collective variables on COLVAR file every step
PRINT ARG=__FILL__ FILE=COLVAR STRIDE=__FILL__
\endplumedfile

Now, you can compare the `COLVAR` file obtained with the one of \ref masterclass-21-1-ex-1: they should be identical!

\subsection masterclass-21-1-ex-3 Exercise 3: Virtual atoms

Sometimes, when calculating a CV, you may not want to use the positions of a number of atoms directly. 
Instead you may want to define a virtual atom whose position is generated based on the positions 
of a collection of other atoms. For example you might want to use the center of mass (\ref COM) or
the geometric center (\ref CENTER) of a group of atoms.

In this exercise, you will learn how to specify virtual atoms and later use them to define a CV.
The objective is to calculate the distances between the geometric center of the serotonin ligand (indicated
as residue `LIG` in `5-HT1B.pdb`) and the geometric centers of the two glycans located at position N24 and N32. 
Glycans are carbohydrate-based polymers that are sometimes linked to certain protein aminoacids. If you examine
`5-HT1B.pdb`, you will find the two glycans defined after the end of the protein, i.e. after residue SER-390.
These two glycans have different length:
- the glycan attached at position N24 ranges from residue BGLC-1 to AFUC-9
- the glycan attached at position N32 ranges from residue BGLC-1 to AFUC-10 

Let's complete the PLUMED input file below. You can use the advanced selection tools learnt in \ref masterclass-21-1-ex-2 
to specify the atoms belonging to the ligand and to the two glycans:

\plumedfile
# Geometric center of the ligand
lig: CENTER ATOMS=__FILLS__
# Geometric center of the first glycan 
g1: CENTER ATOMS=__FILLS__
# Geometric center of the second glycan
g2: CENTER ATOMS=__FILLS__

# Distance between ligand and first glycan
d1: DISTANCE ATOMS=__FILL__
# Distance between ligand and second glycan 
d2: DISTANCE ATOMS=__FILL__

# Print the two distances on COLVAR file every step
PRINT ARG=__FILL__ FILE=COLVAR STRIDE=__FILL__
\endplumedfile

Once you have prepared a PLUMED input file containing the above instructions, you can execute it on the trajectory `5-HT1B.xtc`
by making use of the following command:

\verbatim
plumed driver --mf_xtc 5-HT1B.xtc --plumed plumed.dat
\endverbatim

Let's now analyze the output of the calculation by plotting the time series of the two CVs.
Can you say if the ligand is overall staying closer to the first or second glycan?

\subsection masterclass-21-1-ex-4 Exercise 4: Fixing issues with PBCs discontinuities

As mentioned above, `5-HT1B.xtc` is the raw trajectory generated by the GROMACS MD code. Therefore, it typically presents
discontinuities due to PBCs. Many of the CVs used so far, such as \ref CENTER or \ref DISTANCE, take care of these discontinuities 
automatically. However, other CVs need a special command, called \ref WHOLEMOLECULES, to fix PBCs discontinuities before the calculation
of the CV. In this exercise, you will learn how to use this action.

We have seen that the first 40 N-terminal residues of the 5-HT1B receptor are quite flexibile. In this exercise, we want to estimate
the secondary structure content (alpha-helix and beta-sheet) of this fragment during the course of the MD simulations. In order to 
do so, we can use the following 3 CVs:
- \ref ALPHARMSD measures the alpha-helical content of a protein structure. 
- \ref PARABETARMSD measures the parallel beta-sheet content. 
- \ref ANTIBETARMSD measures the antiparallel beta-sheet content. 

Let's first try to complete the following PLUMED input file:

\plumedfile
# info about the system
MOLINFO STRUCTURE=__FILL__

# make the first 40 N-terminal residues whole
WHOLEMOLECULES ENTITY0=__FILL__

# alpha-helix content of residues 1-40
h: ALPHARMSD RESIDUES=__FILL__ TYPE=OPTIMAL
# parallel beta-sheet content of residues 1-40
pb: PARABETARMSD RESIDUES=__FILL__ TYPE=OPTIMAL
# antiparallel beta sheet-content of residues 1-40
ab: ANTIBETARMSD RESIDUES=__FILL__ TYPE=OPTIMAL

# now we can create a new CV that sums parallel and antiparallel beta-sheet contents
b: COMBINE ARG=__FILL__ PERIODIC=NO

# Print the alpha-helical content and the *total* beta-sheet content on COLVAR file every step
PRINT ARG=__FILL__ FILE=COLVAR STRIDE=__FILL__
\endplumedfile

and use it to analyze the trajectory `5-HT1B.xtc`. Can you say if the N-terminal first 40 residues tend to populate more
alpha-helical or beta-sheet conformations? 

\subsection masterclass-21-1-ex-5 Exercise 5: RMSD metrics 

\subsection masterclass-21-1-ex-6 Exercise 6: Alignment to a template

\subsection masterclass-21-1-ex-7 Exercise 7: Use your imagination

*/

link: @subpage masterclass-21-1 

description: This Masterclass explains the syntax of the PLUMED input file and how to use PLUMED to analyze CVs
