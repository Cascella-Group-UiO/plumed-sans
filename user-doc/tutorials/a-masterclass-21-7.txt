/**
\page masterclass-21-7 PLUMED Masterclass 21.7: Optimizing PLUMED performances

\authors Giovanni Bussi and Max Bonomi
\date April 21, 2021

\section masterclass-21-7-aims Aims

In this Masterclass, we will discuss 

\section masterclass-21-7-lo Objectives

Once you have completed this Masterclass you will be able to:

- xx
 
\section masterclass-21-7-install Setting up PLUMED

For this masterclass you will need versions of PLUMED and GROMACS that are compiled using the MPI library.
Thus follow the instructions that are reported for \ref masterclass-21-5.

Natively-compiled GROMACS and PLUMED will be significantly faster than the conda versions that we are providing.
Since we are focusing on performance here, this might be the right time to learn how to install them on your own.

\section masterclass-21-7-resources Resources

The data needed to execute the exercises of this Masterclass can be found on [GitHub](https://github.com/plumed/masterclass-21-7).
You can clone this repository locally on your machine using the following command:

\verbatim
git clone https://github.com/plumed/masterclass-21-7.git
\endverbatim

\note All the exercises were tested with PLUMED version 2.7.0 and GROMACS 2019.6

\section masterclass-21-7-ex Exercises

Notice that the results of these exercises might depend on the details of the hardware and software you are using.
It is thus instructive to test them on different architectures, or with different PLUMED or GROMACS versions.

\subsection masterclass-21-7-ex-intro Measuring performance

NOTE: general introduction with an example showing how to see ns/day in GROMACS, then mention to \ref DEBUG DETAILED_TIMERS

\subsection masterclass-21-7-ex-1 Exercise 1: Dissociation of NaCl in water

NOTE: Explain the system and introduce the exercise and add a figure with the result.

We will start with the following input file:
\plumedfile
# vim:ft=plumed
NA: GROUP ATOMS=1
CL: GROUP ATOMS=2
WAT: GROUP ATOMS=3-8544:3
d: DISTANCE ATOMS=NA,CL
cn: COORDINATION GROUPA=1 GROUPB=WAT R_0=0.3
PRINT ARG=d,cn STRIDE=100 FILE=COLVAR
METAD ARG=d,cn SIGMA=0.05,0.1 HEIGHT=0.1 PACE=10 BIASFACTOR=5
\endplumedfile

NOTE: specify number of steps and gromacs command line.

\subsection masterclass-21-7-ex-1-a Exercise 1a: Optimizing the calculation of a metadynamics bias

For this first point, we will focus on the calculation and update of the metadynamics bias.
We will try to have a simulation that runs faster without changing significantly the result.
Check the manual of \ref METAD and find out how to speed up this calculation.
A few hints:
- What matters is the deposition rate (that is: height/pace). Increasing the pace and height by
  the same factor should not change the result significantly.
- Grids will make calculation faster (especially for long runs) but update slower.

Notice that these changes are not expected to impact the convergence of the algorithm.
Thus, you do not need a converged simulation to measure the impact on performances.

\subsection masterclass-21-7-ex-1-b Exercise 1b: Optimizing the calculation of a coordination number

For this second point, we will focus on the calculation of one of the two biased collective variables,
namely the coordination of the Na ion with water oxygens.
We will try to have a simulation that runs faster without changing significantly the result.
Check the manual of \ref COORDINATION and find out how to speed up this calculation.
A few hints:
- Neighbor lists might help, but be very careful with parameters.
- Starting with PLUMED v2.7 the construction of neighbor lists is parallelized.
  Performances might thus be very different if you test your input with PLUMED v2.6 or earlier.

Notice that these changes are not expected to impact the convergence of the algorithm.
Thus, you do not need a converged simulation to measure the impact on performances.

\subsection masterclass-21-7-ex-1-c Exercise 1c: Optimizing GROMACS parallelization

For this third point, we will try to make sure that GROMACS runs at its maximum speed.
For this you will have to check GROMACS manual.
A few hints:
- Based on the number of processors in your computer, play with the number of OpenMP threads and of MPI processes.
- Check if the `-pin on` option improves performances.

Notice that these changes are not expected to impact the convergence of the algorithm.
Thus, you do not need a converged simulation to measure the impact on performances.

\subsection masterclass-21-7-ex-1-d Exercise 1d: Optimizing metadynamics parameters

We will now make modifications to the algorithm so as to be able to arrive to the same result
running a shorter simulation. Try to play with \ref METAD parameters and see if you can
improve them. A few hints:
- Changing hills width might affect that speed at which you fill free-energy basins.
- Limiting the domain of the collective variables that you explore might help, if you can predict what happens
  in the portion of the domain that the simulation does not explore.
- You can even try to reduce the number of CVs.

Notice that these changes are expected to impact the convergence of the algorithm.
Thus, you do not need a converged simulation to measure the impact on performances, and you have
to make sure that the statistical accuracy is comparable.

\subsection masterclass-21-7-ex-2 Exercise 2: Folding of the C-terminal domain (CTD) of the RfaH virulence factor

In this exercise, we will work with the C-terminal domain (CTD) of the RfaH virulence factor from _Escherichia coli_ introduced in \ref masterclass-21-4-ex-6.
This part of the system, which we refer to as RfaH-CTD, undergoes a dramatic conformational transformation from β-barrel to α-helical,
which is stabilized by the N-terminal domain of the RfaH virulence factor (see Fig. \ref masterclass-21-4-RfaH-CTD-fig). 
The system is simulated using a simplified, structure-based potential, called [SMOG](https://smog-server.org). 
The SMOG energy function has been designed to have two local minima that correspond to the β-barrel and α-helical states of RfaH-CTD.
To achieve this goal, the energy function promotes native contacts, i.e. interactions that are present in the native structure(s).
For these types of force fields, a CV that is correlated with the energy of the system has been shown to be good to enhance sampling.
An example of good CV is the total number of native contacts. These types of CVs are often computationally expensive to calculate
at every step of the simulation. In this exercise, the user will learn how to write and optimize these types of CVs. 

In the `data/RfaH-CTD` folder of the `GitHub` repository of this Masterclass, you will find:
- two PDB files of RfaH-CTD in the β-barrel (stateA.pdb) and α-helical (stateB.pdb) states;
- a `topol.tpr` file, which is needed to perform a MD simulation of this system with GROMACS;
- a template PLUMED input file to perform a metadynamics simulation using the total number of native contacts as CV.
  These contacts are defined based only on the β-barrel state, which is the most populated in the conditions we are simulating.

The PLUMED input file looks as follows:

\plumedfile
# CA-RMSDs from the two reference conformations
rmsd_A: RMSD REFERENCE=stateA.pdb TYPE=OPTIMAL
rmsd_B: RMSD REFERENCE=stateB.pdb TYPE=OPTIMAL

# list of distances between CA atoms that are closer
# than 0.6 nm in the reference PDB file (stateA.pdb, β-barrel state)
d1: DISTANCE ATOMS=2,11
d2: DISTANCE ATOMS=2,103
d93: DISTANCE ATOMS=315,324

# switching functions to define a contact from the distance between two atoms
c1: CUSTOM FUNC=((1.0-(x/0.6)^8)/(1.0-(x/0.6)^12)) ARG=d1 PERIODIC=NO
c2: CUSTOM FUNC=((1.0-(x/0.6)^8)/(1.0-(x/0.6)^12)) ARG=d2 PERIODIC=NO 
c93: CUSTOM FUNC=((1.0-(x/0.6)^8)/(1.0-(x/0.6)^12)) ARG=d93 PERIODIC=NO

# sum of switching functions
cv: COMBINE ARG=c1,c2,c3,c4,c5,c6,c7,c8,c9,c10,c11,c12,c13,c14,c15,c16,c17,c18,c19,c20,c21,c22,c23,c24,c25,c26,c27,c28,c29,c30,c31,c32,c33,c34,c35,c36,c37,c38,c39,c40,c41,c42,c43,c44,c45,c46,c47,c48,c49,c50,c51,c52,c53,c54,c55,c56,c57,c58,c59,c60,c61,c62,c63,c64,c65,c66,c67,c68,c69,c70,c71,c72,c73,c74,c75,c76,c77,c78,c79,c80,c81,c82,c83,c84,c85,c86,c87,c88,c89,c90,c91,c92,c93 PERIODIC=NO

# metadynamics parameters
metad: METAD ARG=cv ...
   # Deposit a Gaussian every 500 time steps, with initial height 
   # equal to 1.2 kJ/mol and bias factor equal to 60
   PACE=500 HEIGHT=1.2 BIASFACTOR=60 
   # Gaussian width (sigma) based on the CV fluctuations in unbiased run 
   SIGMA=3.0
   # Gaussians will be written to file
   FILE=HILLS
...

# print useful stuff
PRINT ARG=cv,rmsd_A,rmsd_B,metad.bias STRIDE=500 FILE=COLVAR
\endplumedfile

The objectives of this exercise are to:
1. optimize the distance-based CV provided in the template PLUMED input file;
2. optimize the performances of well-tempered metadynamics, as done in \ref masterclass-21-7-ex-1-a and \ref masterclass-21-7-ex-1-d;
3. evaluate the stability of the β-barrel state of RfaH-CTD (with error estimate).

Please keep in mind that:
- SMOG is significantly less computational demanding than all-atoms, explicit solvent force fields. However, the simulation of this system might take a few hours,
  so allocate enough time to complete this exercise;
- due to the nature of the force field, we are simulating at an unphysical temperature of 60K. Be ready to test large values of the `BIASFACTOR`.
- due to the special nature of the force field, please execute GROMACS using the following command: `gmx mdrun -plumed plumed.dat -ntomp 4 -noddcheck`.
  You can adjust the number of CPU cores you want to use (here 4, OpenMP parallelization), based on the available resources. The system is not
particularly big, therefore using a large number of cores might be inefficient.

*/

link: @subpage masterclass-21-7 

description: This Masterclass explains how to use optimize PLUMED performances
