/**
\page masterclass-21-5 PLUMED Masterclass 21.5: Simulations with multiple replicas

\authors Giovanni Bussi
\date March 15, 2021

\section masterclass-21-5-aims Aims

In this Masterclass, we will discuss how to perform and analyze multi-replica simulations where different replicas feel a different bias potential. We will also understand how to compute statistical errors on the computed quantities.

\section masterclass-21-5-lo Objectives

Once you have completed this Masterclass you will be able to:

- Use PLUMED and GROMACS to run multiple replica simulations.
- Use WHAM to combine multiple simulations performed with different bias potentials.
- Calculate error bars on free energies and populations, taking into account correlations induced by replica exchanges.
 
\section masterclass-21-5-install Setting up PLUMED

For this masterclass you will need versions of PLUMED and GROMACS that are compiled using the MPI library.
The versions used in the previous masterclasses will thus not work properly.
In order to obtain the correct versions, please use the following commands:

\verbatim
conda install --strict-channel-priority -c plumed/label/masterclass-mpi -c conda-forge plumed
conda install --strict-channel-priority -c plumed/label/masterclass-mpi -c conda-forge gromacs
\endverbatim

The `--strict-channel-priority` might be necessary in case your conda install is configured to download packages from the `bioconda` channel. Indeed, `bioconda` contains a version of GROMACS that is **not** patched with PLUMED and would thus not work here. Similarly, the channel `plumed/label/masterclass-mpi` should receive a priority higher than `conda-forge`, so as to install the MPI version of PLUMED.

On Linux, the command above should install the following packages:

\verbatim
  gromacs            plumed/label/masterclass-mpi/linux-64::gromacs-2019.6-h3fd9d12_100
  plumed             plumed/label/masterclass-mpi/linux-64::plumed-2.7.0-h3fd9d12_100
  mpi                conda-forge/linux-64::mpi-1.0-openmpi
  openmpi            conda-forge/linux-64::openmpi-4.1.0-h9b22176_1
  [ etc ... ]
\endverbatim

The exact versions might be different. Notice however that GROMACS and PLUMED come from the `plumed/label/masterclass-mpi` channel, whereas the required libraries come from the `conda-forge` channel.
To be sure the installed GROMACS is compiled with MPI patched with PLUMED, try the following shell command:

\verbatim
gmx_mpi mdrun -h 2> /dev/null | grep -q plumed && echo ok
\endverbatim

It should print `ok`.
To be sure that PLUMED has been compiled with MPI, try the following shell command:

\verbatim
plumed --has-mpi && echo ok
\endverbatim

It should print `ok`.

Please ensure that you have setup PLUMED and GROMACS on your machine before starting the exercises. Also notice that in order to obtain good performances it is better to compile GROMACS from source on the machine you are running your simulations. You can find out in the PLUMED documention how to patch GROMACS with PLUMED so as to be able to install it from source. For this tutorial, the conda precompiled binaries will be sufficient.

\section masterclass-21-5-resources Resources

The data needed to execute the exercises of this Masterclass can be found on [GitHub](https://github.com/plumed/masterclass-21-5).
You can clone this repository locally on your machine using the following command:

\verbatim
git clone https://github.com/plumed/masterclass-21-5.git
\endverbatim

\note All the exercises were tested with PLUMED version 2.7.0 and GROMACS 2019.6

\section masterclass-21-5-ex Exercises

Throughout this tutorial we will run simulations of alanine dipeptide in vacuum using GROMACS and PLUMED.
Whereas this system is too simple to be considered a proper benchmark for enhanced sampling methods,
it is complex enough to be used in learning them. Notice that, although PLUMED has a portable interface,
replica exchange simulations are likely only supported by GROMACS. You should check the documentation of
the MD code you are using to know if replica exchange simulations will work correctly with PLUMED.

\subsection masterclass-21-5-intr Introduction to replica simulations

Many methods are based on the simultaneous simulation of multiple replicas. In some cases, all the replicas
will use the same input file, whereas in other cases a separate input file should be provided for each replica.
Notice that using a single input file does not imply that all the replicas will feel the same biasing potential.
Indeed, since biasing potentials in PLUMED might be history dependent, and the history of each replica might different
from the history of other replicas, the potentials might in the end be different.

PLUMED has been designed so that multiple-replica simulations can be run even if all the replicas are acting in the same
directory. In order to avoid clashes in output files, thus, PLUMED will append a suffix corresponding to the index of the replica
to the name of each output file (for instance, the command `PRINT FILE=colvar.dat` will print on a file names `colvar.0.dat` in the first replica, etc.).
Suffixes will be added also to input file, so that if you run a simulation where the input file is `plumed.dat`, the first replica will open
a file names `plumed.0.dat`, and so on. However, for input file, if the specific file does not exist, PLUMED will look for the file without the suffix
(in the example, `plumed.dat`). This provides maximum flexibility and allows to manage both cases where the input file is the same and cases where specific
input files should be used.

In addition to this, it is possible to use a \ref special-replica-syntax that allows to differentiate the input of different replicas, even if they are all
reading the same `plumed.dat` file. For instance, the command `RESTRAINT ARG=d AT=@replicas:1.0,1.1,1.2 KAPPA=1.0` will apply restraints at different positions
for three replicas.

Notice however that starting with GROMACS 2019 replica simulations are forced to run in separate directories. To exploit the possibility to use a single input file,
one should put it in the parent directory. Output files will be produced in separate directories by default, but their names will be suffixed.

In order to use multiple replica methods, you should run your simulation using MPI. This can be done prefixing your command
with `mpiexec -np N --oversubscribe`, where `N` is the number of processes that you want to use and the `--oversubscribe`
option is an OpenMPI option that is required to use more processes than the number of available processors. This is typically suboptimal,
but we will need it in our lectures to run, e.g., simulations with 32 replicas even if we have a computer with 4 cores.

In brief, to run a GROMACS simulation where the individual replicas are in directories names `dir0`, `dir1`, etc
and the `plumed.dat` file is in the parent directory you will need a command such as
```
mpiexec -np 16 --oversubscribe gmx_mpi mdrun -multi dir? dir?? -plumed ../plumed.dat
```

\subsection masterclass-21-5-ex-1 Exercise 1: Multiple-windows umbrella sampling with replica exchange

In \ref masterclass-21-3-ex-4 we have seen how to run a multiple-windows umbrella sampling simulation with
independent simulations. Here we will run it using replica exchange. The only differences are that:
- Simulations should be run at the same time using `mpiexec`
- You will have to specify a stride for GROMACS to attempt coordinate exchanges, using the `-replex` option.

It will be sufficient to use a single `plumed.dat` file that looks like this:
\plumedfile
# vim:ft=plumed
MOLINFO STRUCTURE=../reference.pdb
phi: TORSION ATOMS=__FILL__
psi: TORSION ATOMS=__FILL__
bb: RESTRAINT ARG=phi KAPPA=200.0 AT=@replicas:__FILL__
PRINT ARG=phi,psi,bb.bias FILE=../colvar_multi.dat STRIDE=100
\endplumedfile

According to the instructions above, you should create 32 directories (one per replica), place the tpr file (for this exercise: `topolA.tpr`)
in each of them, and run the following command
\verbatim
mpiexec -np 32 --oversubscribe gmx_mpi mdrun -multidir dir? dir?? -plumed ../plumed.dat -s topolA.tpr -replex 200
\endverbatim

We will now repeat exercises \ref masterclass-21-3-ex-4 and masterclass-21-3-ex-6 using replica exchange.
Notice that by omitting the `-replex` option you will be able to run a non-replica-exchange umbrella sampling simulation,
identical to the one you performed in \ref masterclass-21-3-ex-4. We will also test different initial conditions,
as in \ref masterclass-21-3-ex-6. In short, run the following four simulations
- Starting from state A, without `-replex` (will be identical to \ref masterclass-21-3-ex-4)
- Starting from state B, without `-replex` (will be identical to \ref masterclass-21-3-ex-6)
- Starting from state A, with `-replex 200`
- Starting from state B, with `-replex 200`

For all the four simulations, perform a WHAM analysis to compute the weights of each frame, and then compute
the relative stability of the two minima (as in \ref masterclass-21-3-ex-5).
Is the dependence on initial condition that we have seen in \ref masterclass-21-3 also present when you are using replica exchange?

\subsection masterclass-21-5-ex-2 Exercise 2: Demuxing your trajectories

TODO: show how to demux trajectories

\subsection masterclass-21-5-ex-3 Exercise 3: Block analysis from demuxed trajectories

TODO: show how to perform block analysis from demuxed trajectories

\subsection masterclass-21-5-ex-4 Exercise 4: Bias-exchange metadynamics

TODO: run bias exchange with different combinations of variables from \ref masterclass-21-4-ex-5

\subsection masterclass-21-5-ex-5 Exercise 5: Parallel-tempering metadynamics

TODO: run a parallel-tempering metadynamics with different combinations of variables from \ref masterclass-21-4-ex-5

\subsection masterclass-21-5-ex-6 Exercise 6: Check for pathological cases

TODO: same as \ref masterclass-21-5-ex-5, but using replicas in a narrow temperature range.

*/

link: @subpage masterclass-21-5 

description: This Masterclass explains how to use PLUMED to run multiple replica simulations
